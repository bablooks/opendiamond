The filter specification is a text file that specifies the each of the filter
s to be instantiated.   The following are the keywords that can
be used in the filter specification.

FILTER <name>

This keyword starts marks the beginning of a new filter
section (and the end of a previous one).  The name argument is a string
that is the symbolic name for the filter.  The name can consist of
alphanumeric characters as well as - and _.  Each filter must
have a unique name.

FILTER_INIT_FUNCTION <function name>

This names the initialization function used
to generate the arguments that are going to be passed to
the filter evaluation function.  This should be the symbol name 
of the function in the library that is passed as part of the
searchlet.  If not initialization function is provided, then a
NULL will be passed as an argument to the filter function.

FILTER_EVAL_FUNCTION <function name> 

This is the name filter function that is used
to process objects.  This function will take an 
object as an argument and return a integer.  This 
integer is compared to the threshold to determine if it
is interesting or not.

FILTER_FINI_FUNCTION <function name>

This is the name of the function in the shared library that is used
to clean up any arguments (free memory) after the the searchlet
has been run.

REQUIRES <name list>

This is an optional argument that gives a list of 1 or more
filters that must be run before this filter can be executed.

ARG <string>

The are strings are passed to the filter init function as a way
of parameterizing a given filters.  They are passed as a list
in the order they are declared in the filter specification.

THRESHOLD <threshold value> 

This is the threshold value to be used for passing or dropping the object.
When a filter completes, it returns an integer value that is compared
to the threshold.  If the value is greater than or equal to the threshold,
then diamond will continue passing the object.  Values less than
the threshold will indicate the object is not interesting and it will
be dropped.

IN_OBJECT <block_size>

This is a mandatory characteristic that indicates the block size that
the application will use for accessing the object contents.

OUT_OBJECT	<modifier>	<block_size>

The OUT_OBJECT specifies characteristics of the object(s) generated by the 
by the filter.  The block size, is the natural size of the writes
that the filter will use when writing data to the object. The 
modifier flags indicates how the system should create the object
base on the input object. (Not that these objects are temporary
and will not exist after the search completes).

The modifier can be one of the following tokens: UNMODIFIED, NEW, CLONE,
COPY_ATTR.  The UNMODIFIED token indicates the the filter will not modify
the input object contents (it can write attributes).  The
NEW token indicates the output object will be a new object with
none of the attributes or data from the input object.
The CLONE attribute specifies the output object is a copy
of the original object (before any applications writes into
it).  The COPY_ATTR give an object with no data portion but
has inherits all of the attributes from in input object. 
At least one OUT_OBJECT must be declared for each filter.

MERIT	<int>

The merit gives an application provided hint hint on how useful
this filter is at eliminating data.  The run-time can use
these hints to provide initial ordering of filters. A lower number
indicates the filter is more effective at eliminating data
than a filter with a higher merit.

