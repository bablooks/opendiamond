#!/usr/bin/env python
#
#  The OpenDiamond Platform for Interactive Search
#  Version 6
#
#  Copyright (c) 2011 Carnegie Mellon University
#  All rights reserved.
#
#  This software is distributed under the terms of the Eclipse Public
#  License, Version 1.0 which can be found in the file named LICENSE.
#  ANY USE, REPRODUCTION OR DISTRIBUTION OF THIS SOFTWARE CONSTITUTES
#  RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT
#

from optparse import OptionParser
import sys

from opendiamond.config import DiamondConfig
from opendiamond.server import DiamondServer

# Create option parser
parser = OptionParser()
attrs = set()
def add_option(*args, **kwargs):
    opt = parser.add_option(*args, **kwargs)
    attrs.add(opt.dest)

# Configure options
add_option('-d',
            dest='daemonize', action='store_false', default=True,
            help='do not run as a daemon')
add_option('-f',
            dest='path',
            help='config file')
add_option('-l',
            dest='localhost_only', default=False, action='store_true',
            help='only listen on localhost')
add_option('-n',
            dest='oneshot', action='store_true', default=False,
            help='do not fork for a new connection')
opts, args = parser.parse_args()
if len(args) > 0:
    parser.error('unrecognized command-line arguments')

# Create config object and server
kwargs = dict([(attr, getattr(opts, attr)) for attr in attrs])
try:
    config = DiamondConfig(**kwargs)
    server = DiamondServer(config)
except Exception, e:
    print str(e)
    sys.exit(1)

# Run the server
server.run()
