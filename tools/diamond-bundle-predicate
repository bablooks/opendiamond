#!/usr/bin/env python
#
#  The OpenDiamond Platform for Interactive Search
#  Version 6
#
#  Copyright (c) 2011 Carnegie Mellon University
#  All rights reserved.
#
#  This software is distributed under the terms of the Eclipse Public
#  License, Version 1.0 which can be found in the file named LICENSE.
#  ANY USE, REPRODUCTION OR DISTRIBUTION OF THIS SOFTWARE CONSTITUTES
#  RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT
#

import os
from opendiamond.bundle import bundle_generic, BUNDLE_NS
from optparse import OptionParser
from xml.etree import ElementTree

if __name__ == '__main__':
    parser = OptionParser(
        usage='%prog [-h] [-o outfile] manifest files...',
        description='Package an OpenDiamond predicate or codec.',
    )
    parser.add_option('-o', dest='outfile', metavar='outfile',
            help='path to output file')
    opts, args = parser.parse_args()
    if len(args) < 1:
        parser.error('no manifest specified')

    try:
        manifest = args.pop(0)
        data = open(manifest).read()
        element = ElementTree.fromstring(data)
        nsroot = '{' + BUNDLE_NS + '}'
        if element.tag == nsroot + 'predicate':
            suffix = '.pred'
        elif element.tag == nsroot + 'codec':
            suffix = '.codec'
        else:
            raise Exception('Unknown root element ' + element.tag)

        outfile = opts.outfile
        if outfile is None:
            outfile = os.path.splitext(manifest)[0] + suffix
        filemap = dict((os.path.basename(a), a) for a in args)

        bundle_generic(outfile, data, filemap)
    except Exception, e:
        parser.error(str(e))
